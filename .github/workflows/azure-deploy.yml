name: Azure App Deployment CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build ./app -t ${{ secrets.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_postgresql_admin_username: ${{ secrets.POSTGRES_ADMIN_USERNAME }}
          TF_VAR_postgresql_admin_password: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
        run: terraform plan -var-file="environments/prod.tfvars"

      - name: Terraform Apply
        env:
          TF_VAR_postgresql_admin_username: ${{ secrets.POSTGRES_ADMIN_USERNAME }}
          TF_VAR_postgresql_admin_password: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
        run: terraform apply -var-file="environments/prod.tfvars" -auto-approve

  deploy-to-appservice:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Container to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.APP_NAME }}
          images: '${{ secrets.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}'

  verify-deployment:
    runs-on: ubuntu-latest
    needs: deploy-to-appservice
    steps:
      - name: Wait for App to be available
        run: sleep 30

      - name: Verify Application
        run: |
          APP_URL="https://${{ secrets.APP_NAME }}.azurewebsites.net"
          echo "Testing URL: $APP_URL"
          curl --fail $APP_URL || (echo "App deployment verification failed!" && exit 1)
